# Generated by Copilot.
# Protocol/CMakeLists.txt
cmake_minimum_required(VERSION 3.12) # target_protobuf_sources needs a reasonably modern CMake
project(ProtocolLib LANGUAGES CXX)

find_package(Protobuf REQUIRED)

# Define .proto files relative to the current source directory
set(MY_PROTO_FILES
    "${CMAKE_CURRENT_SOURCE_DIR}/Raft.proto"
    "${CMAKE_CURRENT_SOURCE_DIR}/Client.proto"
    "${CMAKE_CURRENT_SOURCE_DIR}/ServerStats.proto"
    "${CMAKE_CURRENT_SOURCE_DIR}/ServerControl.proto"
    "${CMAKE_CURRENT_SOURCE_DIR}/RaftLogMetadata.proto"
)

# Generate C++ sources and headers from .proto files
protobuf_generate_cpp(PROTO_SRCS PROTO_HDRS ${MY_PROTO_FILES})

# Create the Protocol library target
add_library(Protocol STATIC ${PROTO_SRCS})

# Set include directories
target_include_directories(Protocol PUBLIC
    ${CMAKE_CURRENT_BINARY_DIR}
)

# Link the Protocol library against the Protobuf libraries.
# PUBLIC ensures that targets linking against Protocol also link against Protobuf if necessary.
target_link_libraries(Protocol PUBLIC
    ${PROTOBUF_LIBRARIES}
)
